.reg .b32 %r<9>;
.reg .b32 r1, r2; 
.global .f32 array[100];
.global .f32 arr;
.global .f32 a[100][100];
tart:  mov.b32 r1, %tid.x; 
shl.b32 r1, r1, 2; 
// shift thread id by 2 bits 
//ld.global.b32 r2, array[r1]; 
// thread[tid] gets array[tid] 
add.f32 r2, r2, 5; // add 1/2
bra.uni     targ;

targ:
	add.s32 	%r1, %r1, 2;
//	cvt.rn.f32.s32	%f3, %r11;
//	st.global.f32 	[%rd1], %f3;
	
